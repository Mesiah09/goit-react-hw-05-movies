{"version":3,"file":"static/js/370.92e11b60.chunk.js","mappings":"+QACA,EAAsB,kBAAtB,EAA+C,mB,SCGhC,SAASA,IAAQ,IAAD,EAC7B,GAAwBC,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAaC,EAAb,KAMQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdJ,GAAQ,SAAAK,GAAS,yBAAUA,GAAV,IAAqBR,SAAS,OAFjC,SAGSS,IAAAA,IAAA,6CACiBL,EADjB,qEAHT,gBAGNM,EAHM,EAGNA,KAIRP,GAAQ,SAAAK,GAAS,yBACZA,GADY,IAEfT,MAAOW,EAAKR,KACZF,SAAS,OAVG,gDAadG,GAAQ,SAAAK,GAAS,yBACZA,GADY,IAEfP,MAAO,KAAMU,QACbX,SAAS,OAhBG,yDAAH,qDAoBfO,MACC,CAACH,IAEJ,IAAMQ,EAAWV,EAAKH,MAAMc,KAAI,SAAAC,GAAC,OAC/B,2BACE,gBACEC,UAAWC,EACXC,IACG,OAADH,QAAC,IAADA,GAAAA,EAAGI,aACC,0CAAoCJ,QAApC,IAAoCA,OAApC,EAAoCA,EAAGI,cACvC,KAENC,IAAI,MAEN,mBACA,0BAAOL,EAAEM,QACT,mBACA,0CACcN,EAAEO,UADhB,UAbOP,EAAEV,OAmBb,OACE,2BACGF,EAAKF,UAAW,sCAChB,UAAAE,EAAKH,aAAL,SAAYuB,QACX,eAAIP,UAAWC,EAAf,SAAwBJ,KAEvBV,EAAKF,UACJ","sources":["webpack://react-homework-template/./src/modules/Cast/cast.module.scss?867f","modules/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"cast_img__l9fn6\",\"list\":\"cast_list__CqTJo\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport s from './cast.module.scss';\nexport default function Cast() {\n  const [cast, setCast] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setCast(prevState => ({ ...prevState, loading: true }));\n        const { data } = await axios.get(\n          `https://api.themoviedb.org/3/movie/${id}/credits?api_key=551128ca2d4756d2fb16af330a08b773&language=en-US`\n        );\n\n        setCast(prevState => ({\n          ...prevState,\n          items: data.cast,\n          loading: false,\n        }));\n      } catch (error) {\n        setCast(prevState => ({\n          ...prevState,\n          error: error.message,\n          loading: false,\n        }));\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  const elements = cast.items.map(e => (\n    <li key={e.id}>\n      <img\n        className={s.img}\n        src={\n          e?.profile_path\n            ? 'https://image.tmdb.org/t/p/w500' + e?.profile_path\n            : null\n        }\n        alt=\"\"\n      />\n      <br />\n      <span>{e.name}</span>\n      <br />\n      <span>\n        Character: {e.character}: {}\n      </span>\n    </li>\n  ));\n\n  return (\n    <div>\n      {cast.loading && <p>...loading</p>}\n      {cast.items?.length ? (\n        <ul className={s.list}>{elements}</ul>\n      ) : (\n        !cast.loading && (\n          <span>We don't have information about cast in this film </span>\n        )\n      )}\n    </div>\n  );\n}\n"],"names":["Cast","useState","items","loading","error","cast","setCast","id","useParams","useEffect","fetchCast","prevState","axios","data","message","elements","map","e","className","s","src","profile_path","alt","name","character","length"],"sourceRoot":""}